{"version":3,"sources":["../yjs/node_modules/browser-pack/_prelude.js","src/Array.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","yArray","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","extend","Y","YArray","_Y$utils$CustomType","os","_model","_content","_classCallCheck","_this","_possibleConstructorReturn","Object","getPrototypeOf","eventHandler","utils","EventHandler","op","struct","some","c","compareIds","id","pos","left","findIndex","values","hasOwnProperty","splice","type","opContent","getType","contents","content","map","val","apply","concat","callEventListeners","object","index","inDeletionRange","delLength","target","_values","_inherits","_createClass","key","value","destroy","_this2","x","insert","Array","mostLeft","ops","prevId","typeDefinition","origin","parent","isTypeDefinition","push","getNextOpId","typeid","createType","requestTransaction","regeneratorRuntime","mark","_callee","mostRight","ml","j","wrap","_context","prev","next","delegateYield","getInsertionCleanEnd","t0","right","getOperation","t1","start","awaitOps","applyCreatedOperations","stop","awaitAndPrematurelyCall","dels","targetId","_callee2","_context2","addEventListener","removeEventListener","_changed","transaction","_context3","deleted","getInsertion","abrupt","store","initType","receivedOp","get","CustomType","CustomTypeDefinition","name","class","YArrayInitializer","model","_types","_context4","Struct","List","forEach"],"mappings":"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","file":"y-array.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global Y */\n'use strict'\n\nfunction extend (Y) {\n  class YArray extends Y.utils.CustomType {\n    constructor (os, _model, _content) {\n      super()\n      this.os = os\n      this._model = _model\n      // Array of all the neccessary content\n      this._content = _content\n      // this._debugEvents = [] // TODO: remove!!\n      this.eventHandler = new Y.utils.EventHandler((op) => {\n        // this._debugEvents.push(JSON.parse(JSON.stringify(op)))\n        if (op.struct === 'Insert') {\n          // when using indexeddb db adapter, the op could already exist (see y-js/y-indexeddb#2)\n          if (this._content.some(function (c) { return Y.utils.compareIds(c.id, op.id) })) {\n            // op exists\n            return\n          }\n          let pos\n          // we check op.left only!,\n          // because op.right might not be defined when this is called\n          if (op.left === null) {\n            pos = 0\n          } else {\n            pos = 1 + this._content.findIndex(function (c) {\n              return Y.utils.compareIds(c.id, op.left)\n            })\n            if (pos <= 0) {\n              throw new Error('Unexpected operation!')\n            }\n          }\n          /* (see above for new approach)\n          var _e = this._content[pos]\n          // when using indexeddb db adapter, the op could already exist (see y-js/y-indexeddb#2)\n          // If the algorithm works correctly, the double should always exist on the correct position (pos - the computed destination)\n          if (_e != null && Y.utils.compareIds(_e.id, op.id)) {\n            // is already defined\n            return\n          }*/\n          var values\n          var length\n          if (op.hasOwnProperty('opContent')) {\n            this._content.splice(pos, 0, {\n              id: op.id,\n              type: op.opContent\n            })\n            length = 1\n            values = [this.os.getType(op.opContent)]\n          } else {\n            var contents = op.content.map(function (c, i) {\n              return {\n                id: [op.id[0], op.id[1] + i],\n                val: c\n              }\n            })\n            // insert value in _content\n            this._content.splice.apply(this._content, [pos, 0].concat(contents))\n            values = op.content\n            length = op.content.length\n          }\n          this.eventHandler.callEventListeners({\n            type: 'insert',\n            object: this,\n            index: pos,\n            values: values,\n            length: length\n          })\n        } else if (op.struct === 'Delete') {\n          var i = 0 // current position in _content\n          for (; i < this._content.length && op.length > 0; i++) {\n            var c = this._content[i]\n            if (Y.utils.inDeletionRange(op, c.id)) {\n              // is in deletion range!\n              var delLength\n              // check how many character to delete in one flush\n              for (delLength = 1;\n                    delLength < op.length && i + delLength < this._content.length && Y.utils.inDeletionRange(op, this._content[i + delLength].id);\n                    delLength++) {}\n              // last operation that will be deleted\n              c = this._content[i + delLength - 1]\n              // update delete operation\n              op.length -= c.id[1] - op.target[1] + 1\n              op.target = [c.id[0], c.id[1] + 1]\n              // apply deletion & find send event\n              let content = this._content.splice(i, delLength)\n              let values = content.map((c) => {\n                if (c.val != null) {\n                  return c.val\n                } else {\n                  return this.os.getType(c.type)\n                }\n              })\n              this.eventHandler.callEventListeners({\n                type: 'delete',\n                object: this,\n                index: i,\n                values: values,\n                _content: content,\n                length: delLength\n              })\n              // with the fresh delete op, we can continue\n              // note: we don't have to increment i, because the i-th content was deleted\n              // but on the other had, the (i+delLength)-th was not in deletion range\n              // So we don't do i--\n            }\n          }\n        } else {\n          throw new Error('Unexpected struct!')\n        }\n      })\n    }\n    _destroy () {\n      this.eventHandler.destroy()\n      this.eventHandler = null\n      this._content = null\n      this._model = null\n      this.os = null\n    }\n    get length () {\n      return this._content.length\n    }\n    get (pos) {\n      if (pos == null || typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos >= this._content.length) {\n        return undefined\n      }\n      if (this._content[pos].type == null) {\n        return this._content[pos].val\n      } else {\n        return this.os.getType(this._content[pos].type)\n      }\n    }\n    toArray () {\n      return this._content.map((x, i) => {\n        if (x.type != null) {\n          return this.os.getType(x.type)\n        } else {\n          return x.val\n        }\n      })\n    }\n    push (contents) {\n      return this.insert(this._content.length, contents)\n    }\n    insert (pos, contents) {\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (!(contents instanceof Array)) {\n        throw new Error('contents must be an Array of objects!')\n      }\n      if (contents.length === 0) {\n        return\n      }\n      if (pos > this._content.length || pos < 0) {\n        throw new Error('This position exceeds the range of the array!')\n      }\n      var mostLeft = pos === 0 ? null : this._content[pos - 1].id\n\n      var ops = []\n      var prevId = mostLeft\n      for (var i = 0; i < contents.length;) {\n        var op = {\n          left: prevId,\n          origin: prevId,\n          // right: mostRight,\n          // NOTE: I intentionally do not define right here, because it could be deleted\n          // at the time of inserting this operation (when we get the transaction),\n          // and would therefore not defined in this._content\n          parent: this._model,\n          struct: 'Insert'\n        }\n        var _content = []\n        var typeDefinition\n        while (i < contents.length) {\n          var val = contents[i++]\n          typeDefinition = Y.utils.isTypeDefinition(val)\n          if (!typeDefinition) {\n            _content.push(val)\n          } else if (_content.length > 0) {\n            i-- // come back again later\n            break\n          } else {\n            break\n          }\n        }\n        if (_content.length > 0) {\n          // content is defined\n          op.content = _content\n          op.id = this.os.getNextOpId(_content.length)\n        } else {\n          // otherwise its a type\n          var typeid = this.os.getNextOpId(1)\n          this.os.createType(typeDefinition, typeid)\n          op.opContent = typeid\n          op.id = this.os.getNextOpId(1)\n        }\n        ops.push(op)\n        prevId = op.id\n      }\n      var eventHandler = this.eventHandler\n      this.os.requestTransaction(function *() {\n        // now we can set the right reference.\n        var mostRight\n        if (mostLeft != null) {\n          var ml = yield* this.getInsertionCleanEnd(mostLeft)\n          mostRight = ml.right\n        } else {\n          mostRight = (yield* this.getOperation(ops[0].parent)).start\n        }\n        for (var j = 0; j < ops.length; j++) {\n          var op = ops[j]\n          op.right = mostRight\n        }\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [ops])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(ops)\n    }\n    delete (pos, length) {\n      if (length == null) { length = 1 }\n      if (typeof length !== 'number') {\n        throw new Error('length must be a number!')\n      }\n      if (typeof pos !== 'number') {\n        throw new Error('pos must be a number!')\n      }\n      if (pos + length > this._content.length || pos < 0 || length < 0) {\n        throw new Error('The deletion range exceeds the range of the array!')\n      }\n      if (length === 0) {\n        return\n      }\n      var eventHandler = this.eventHandler\n      var dels = []\n      for (var i = 0; i < length; i = i + delLength) {\n        var targetId = this._content[pos + i].id\n        var delLength\n        // how many insertions can we delete in one deletion?\n        for (delLength = 1; i + delLength < length; delLength++) {\n          if (!Y.utils.compareIds(this._content[pos + i + delLength].id, [targetId[0], targetId[1] + delLength])) {\n            break\n          }\n        }\n        dels.push({\n          target: targetId,\n          struct: 'Delete',\n          length: delLength\n        })\n      }\n      this.os.requestTransaction(function *() {\n        yield* eventHandler.awaitOps(this, this.applyCreatedOperations, [dels])\n      })\n      // always remember to do that after this.os.requestTransaction\n      // (otherwise values might contain a undefined reference to type)\n      eventHandler.awaitAndPrematurelyCall(dels)\n    }\n    observe (f) {\n      this.eventHandler.addEventListener(f)\n    }\n    unobserve (f) {\n      this.eventHandler.removeEventListener(f)\n    }\n    * _changed (transaction, op) {\n      if (!op.deleted) {\n        if (op.struct === 'Insert') {\n          // update left\n          var l = op.left\n          var left\n          while (l != null) {\n            left = yield* transaction.getInsertion(l)\n            if (!left.deleted) {\n              break\n            }\n            l = left.left\n          }\n          op.left = l\n          // if op contains opContent, initialize it\n          if (op.opContent != null) {\n            yield* transaction.store.initType.call(transaction, op.opContent)\n          }\n        }\n        this.eventHandler.receivedOp(op)\n      }\n    }\n  }\n\n  Y.extend('Array', new Y.utils.CustomTypeDefinition({\n    name: 'Array',\n    class: YArray,\n    struct: 'List',\n    initType: function * YArrayInitializer (os, model) {\n      var _content = []\n      var _types = []\n      yield* Y.Struct.List.map.call(this, model, function (op) {\n        if (op.hasOwnProperty('opContent')) {\n          _content.push({\n            id: op.id,\n            type: op.opContent\n          })\n          _types.push(op.opContent)\n        } else {\n          op.content.forEach(function (c, i) {\n            _content.push({\n              id: [op.id[0], op.id[1] + i],\n              val: op.content[i]\n            })\n          })\n        }\n      })\n      for (var i = 0; i < _types.length; i++) {\n        yield* this.store.initType.call(this, _types[i])\n      }\n      return new YArray(os, model.id, _content)\n    },\n    createType: function YArrayCreateType (os, model) {\n      return new YArray(os, model.id, [])\n    }\n  }))\n}\n\nmodule.exports = extend\nif (typeof Y !== 'undefined') {\n  extend(Y)\n}\n"],"sourceRoot":"/source/"}